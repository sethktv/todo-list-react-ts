{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alingItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","i","onChangeTodo","removeTodo","useContext","classes","completed","push","style","className","join","type","onChange","id","title","onClick","bind","listStyle","margin","TodoList","props","todos","map","onToggle","AddTodo","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","target","App","setTodos","Provider","filter","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAIeA,EAFCC,IAAMC,gB,OCEhBC,EAAS,CACXC,GAAI,CACAC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,OACTC,OAAQ,iBACRC,aAAc,MACdC,aAAc,OAElBC,MAAO,CACHC,YAAa,SAgCNC,MA5Bf,YAA8C,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,EAAGC,EAAgB,EAAhBA,aAClBC,EAAcC,qBAAWnB,GAAzBkB,WACDE,EAAU,GAOhB,OAJGL,EAAKM,WACJD,EAAQE,KAAK,QAKb,qBAAIC,MAAOpB,EAAOC,GAAlB,UACI,uBAAMoB,UAAWJ,EAAQK,KAAK,KAA9B,UACI,uBAAOC,KAAK,WAAWH,MAAOpB,EAAOS,MAAOe,SAAU,kBAAMV,EAAaF,EAAKa,OAC9E,iCAASZ,EAAI,IAFjB,SAICD,EAAKc,SAEN,wBAAQC,QAASZ,EAAWa,KAAK,KAAMhB,EAAKa,IAA5C,sBCjCNzB,EAAS,CACX6B,UAAW,OACXC,OAAQ,EACRzB,QAAS,GAoBE0B,MAjBf,SAAkBC,GACd,OACI,oBAAIZ,MAAOpB,EAAX,SACKgC,EAAMC,MAAMC,KAAI,SAACtB,EAAMC,GACpB,OACI,cAAC,EAAD,CAAUD,KAAMA,EAAMC,EAAGA,EAAkBC,aAAckB,EAAMG,UAA9BvB,EAAKa,UCW3CW,MAvBf,YAA8B,IAAZC,EAAW,EAAXA,SAAW,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAWzB,OACI,uBAAMpB,MAAO,CAAEZ,aAAc,QAAUiC,SAT3C,SAAuBC,GACnBA,EAAMC,iBACFJ,EAAMK,SACNP,EAASE,GACTC,EAAS,MAKb,UACI,uBAAOD,MAAOA,EAAOf,SAAU,SAAAkB,GAAK,OAAIF,EAASE,EAAMG,OAAON,UAC9D,wBAAQhB,KAAK,SAAb,kEC8BGuB,MAzCf,WAAgB,IAAD,EAEahD,IAAMwC,SAAS,CACvC,CAAEb,GAAI,EAAGP,WAAW,EAAOQ,MAAO,iEAClC,CAAED,GAAI,EAAGP,WAAW,EAAOQ,MAAO,yFAClC,CAAED,GAAI,EAAGP,WAAW,EAAOQ,MAAO,+EALvB,mBAENO,EAFM,KAECc,EAFD,KA6Bb,OACE,cAAC,EAAQC,SAAT,CAAkBT,MAAO,CAAExB,WAb7B,SAAoBU,GAClBsB,EAASd,EAAMgB,QAAO,SAAArC,GAAI,OAAIA,EAAKa,KAAOA,QAY1C,SACA,sBAAKJ,UAAU,UAAf,UACE,yFACA,cAAC,EAAD,CAASgB,SAZb,SAAiBX,GACfqB,EAASd,EAAMiB,OAAO,CAAC,CACrBxB,QACAD,GAAI0B,KAAKC,MACTlC,WAAW,SASVe,EAAMoB,OAAS,cAAC,EAAD,CAAUpB,MAAOA,EAAOE,SA1B5C,SAAoBV,GAClBsB,EAASd,EAAMC,KAAI,SAAAtB,GAIjB,OAHIA,EAAKa,KAAOA,IACdb,EAAKM,WAAaN,EAAKM,WAElBN,SAqB2D,gHC5BzD0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9f6f9a74.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../context'\r\n\r\nconst styles = {\r\n    li: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alingItems: 'center',\r\n        padding: '10px',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '1px'\r\n    },\r\n    input: {\r\n        marginRight: '15px'\r\n    }\r\n}\r\n\r\nfunction TodoItem({ todo, i, onChangeTodo }) {\r\n    const {removeTodo} = useContext(Context)\r\n    const classes = []\r\n    \r\n\r\n    if(todo.completed) {\r\n        classes.push('done')\r\n    }\r\n\r\n    return (\r\n\r\n        <li style={styles.li}>\r\n            <span className={classes.join(' ')}>\r\n                <input type='checkbox' style={styles.input} onChange={() => onChangeTodo(todo.id)}/>\r\n                <strong>{i + 1}</strong>\r\n            &emsp;\r\n            {todo.title}\r\n            </span>\r\n            <button onClick={removeTodo.bind(null, todo.id)}>&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    i: PropTypes.number,\r\n    onChangeTodo: PropTypes.func.isRequired\r\n}\r\nexport default TodoItem","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = {\r\n    listStyle: 'none',\r\n    margin: 0,\r\n    padding: 0,\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles}>\r\n            {props.todos.map((todo, i) => {\r\n                return (\r\n                    <TodoItem todo={todo} i={i} key={todo.id}  onChangeTodo={props.onToggle}/>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default TodoList","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AddTodo({onCreate}) {\r\n    const [value, setValue] = useState('')\r\n\r\n    function submitHendler(event) {\r\n        event.preventDefault()\r\n        if (value.trim()) {\r\n            onCreate(value)\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form style={{ marginBottom: '10px' }} onSubmit={submitHendler}>\r\n            <input value={value} onChange={event => setValue(event.target.value)} />\r\n            <button type='submit'>Добавить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    onCreate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo","import React from 'react'\nimport TodoList from './Todo/TodoList'\nimport Context from './context'\nimport AddTodo from './Todo/AddTodo'\nimport { func } from 'prop-types'\n\nfunction App() {\n\n  const [todos, setTodos] = React.useState([\n    { id: 1, completed: false, title: 'Купить хлеб' },\n    { id: 2, completed: false, title: 'Купить картошку' },\n    { id: 3, completed: false, title: 'Купить молоко' }\n  ])\n\n  function toggleTodo(id) {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo\n    }))\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  function addTodo(title) {\n    setTodos(todos.concat([{\n      title,\n      id: Date.now(),\n      completed: false,\n    }]))\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n    <div className=\"wrapper\">\n      <h1>Список дел</h1>\n      <AddTodo onCreate={addTodo} />\n      {todos.length ? <TodoList todos={todos} onToggle={toggleTodo}/> : <p>Пустой список</p> }\n      \n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}